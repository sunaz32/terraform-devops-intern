name: Terraform CI/CD (Dev)

on:
  workflow_call:
    inputs:
      image_url:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      ecs_key_public:
        required: true
        type: string
      destroy:
        required: true
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      image_url:
        description: 'Docker image URL'
        required: true
        type: string
      target_branch:
        description: 'Terraform code branch to deploy'
        required: true
        type: string
      ecs_key_public:
        description: 'SSH public key for ECS EC2'
        required: true
        type: string
      destroy:
        description: 'Manually confirm to destroy resources'
        required: true
        type: boolean
        default: true

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Terraform Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.target_branch || inputs.target_branch }}

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::851725602228:role/GitHubTerraform-role
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform -chdir=Dev-Environment init -backend-config="key=dev/terraform.tfstate"

      - name: Terraform Validate
        run: terraform -chdir=Dev-Environment validate

      - name: Terraform Plan
        if: ${{ !(github.event.inputs.destroy == 'true' || inputs.destroy == true) }}
        run: |
          terraform -chdir=Dev-Environment plan \
            -var="image_url=${{ github.event.inputs.image_url || inputs.image_url }}" \
            -var="ecs_key_public=${{ github.event.inputs.ecs_key_public || inputs.ecs_key_public }}"

      - name: Terraform Apply
        if: ${{ !(github.event.inputs.destroy == 'true' || inputs.destroy == true) }}
        run: |
          terraform -chdir=Dev-Environment apply -auto-approve \
            -var="image_url=${{ github.event.inputs.image_url || inputs.image_url }}" \
            -var="ecs_key_public=${{ github.event.inputs.ecs_key_public || inputs.ecs_key_public }}"

      - name: Terraform Destroy
        if: ${{ github.event.inputs.destroy == 'true' || inputs.destroy == true }}
        run: |
          echo "Destroy confirmed. Proceeding..."
          terraform -chdir=Dev-Environment destroy -auto-approve \
            -var="image_url=${{ github.event.inputs.image_url || inputs.image_url }}" \
            -var="ecs_key_public=${{ github.event.inputs.ecs_key_public || inputs.ecs_key_public }}"
