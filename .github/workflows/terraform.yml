name: Terraform CI/CD (Dev)

on:
  workflow_call:
    inputs:
      image_url:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      ecs_key_name:
        required: true
        type: string
      ecs_key_public:
        required: true
        type: string

  workflow_dispatch:
    inputs:
      image_url:
        description: 'Docker image URL'
        required: true
        type: string
      target_branch:
        description: 'Terraform code branch to deploy'
        required: true
        type: string
      ecs_key_name:
        description: 'Name of EC2 key pair'
        required: true
        type: string
      ecs_key_public:
        description: 'Public key value'
        required: true
        type: string

env:
  TF_WORKING_DIR: ./stage-environment    # change if needed
  AWS_REGION: ap-south-1
  ECS_AMI_ID: ami-0e670eb768a5fc3d4       # update if required

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Terraform Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.target_branch }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725602228:role/GitHubApp-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform -chdir=$TF_WORKING_DIR init

      - name: Terraform Plan
        run: |
          terraform -chdir=$TF_WORKING_DIR plan \
            -var="image_url=${{ inputs.image_url }}" \
            -var="ecs_ami_id=${{ env.ECS_AMI_ID }}" \
            -var="ecs_key_name=${{ inputs.ecs_key_name }}" \
            -var="ecs_key_public=${{ inputs.ecs_key_public }}" \
            -out=tfplan

      - name: Terraform Apply
        run: terraform -chdir=$TF_WORKING_DIR apply -auto-approve tfplan
