name: Terraform Multi-Environment CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "dev-environment/**"
      - "stage-environment/**"
      - "prod-environment/**"
      - "modules/**"
      - ".github/workflows/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to deploy"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stage
          - prod

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ Detect Environment
      - name: Detect Environment
        id: detect
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV_NAME="${{ github.event.inputs.environment }}"
          else
            # Check all files changed in this push
            DIFF_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

            if echo "$DIFF_FILES" | grep -q "^dev-environment/"; then
              ENV_NAME="dev"
            elif echo "$DIFF_FILES" | grep -q "^stage-environment/"; then
              ENV_NAME="stage"
            elif echo "$DIFF_FILES" | grep -q "^prod-environment/"; then
              ENV_NAME="prod"
            else
              ENV_NAME=""
            fi
          fi

          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "env_folder=${ENV_NAME}-environment" >> $GITHUB_OUTPUT

      # 3️⃣ Validate Environment
      - name: Validate Environment
        run: |
          if [ -z "${{ steps.detect.outputs.env_folder }}" ]; then
            echo "❌ ERROR: No environment folder detected. Exiting."
            exit 1
          else
            echo "✅ Environment: ${{ steps.detect.outputs.env_name }}"
            echo "✅ Environment folder: ${{ steps.detect.outputs.env_folder }}"
          fi

      # 4️⃣ Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRETE_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # 6️⃣ Terraform Init
      - name: Terraform Init
        run: terraform -chdir="${{ steps.detect.outputs.env_folder }}" init

      # 7️⃣ Terraform Validate
      - name: Terraform Validate
        run: terraform -chdir="${{ steps.detect.outputs.env_folder }}" validate

      # 8️⃣ Terraform Plan
      - name: Terraform Plan
        run: terraform -chdir="${{ steps.detect.outputs.env_folder }}" plan

      # 9️⃣ Terraform Apply
      - name: Terraform Apply
        run: terraform -chdir="${{ steps.detect.outputs.env_folder }}" apply -auto-approve
