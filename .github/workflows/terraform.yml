name: Terraform CI/CD for All Environments

on:
  push:
    branches:
      - dev
      - stage
      - main
    paths:
      - 'modules/**'
      - 'dev-environment/**'
      - 'stage-environment/**'
      - 'prod-environment/**'
      - '.github/workflows/**'

  workflow_dispatch:
    inputs:
      env_name:
        description: "Environment (dev/stage/prod)"
        required: true
      image_url:
        description: "Docker Image URL"
        required: true
      destroy:
        description: "Destroy infrastructure"
        required: false
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: 851725602228

jobs:
  terraform:
    name: Deploy with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851725602228:role/Githubterraform-newrole
          role-session-name: terraform-session
          aws-region: ${{ env.AWS_REGION }}

      - name: Detect Environment & Image
        id: detect
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "env_folder=${{ github.event.inputs.env_name }}-environment" >> $GITHUB_OUTPUT
            echo "backend_key=${{ github.event.inputs.env_name }}/terraform.tfstate" >> $GITHUB_OUTPUT
            echo "image_url=${{ github.event.inputs.image_url }}" >> $GITHUB_OUTPUT
          else
            BRANCH_NAME="${GITHUB_REF##*/}"
            if [[ "$BRANCH_NAME" == "dev" ]]; then
              echo "env_folder=dev-environment" >> $GITHUB_OUTPUT
              echo "backend_key=dev/terraform.tfstate" >> $GITHUB_OUTPUT
            elif [[ "$BRANCH_NAME" == "stage" ]]; then
              echo "env_folder=stage-environment" >> $GITHUB_OUTPUT
              echo "backend_key=stage/terraform.tfstate" >> $GITHUB_OUTPUT
            elif [[ "$BRANCH_NAME" == "main" ]]; then
              echo "env_folder=prod-environment" >> $GITHUB_OUTPUT
              echo "backend_key=prod/terraform.tfstate" >> $GITHUB_OUTPUT
            else
              echo "Unsupported branch: $BRANCH_NAME"
              exit 1
            fi
          fi

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ steps.detect.outputs.backend_key }}"
        working-directory: ${{ steps.detect.outputs.env_folder }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ steps.detect.outputs.env_folder }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ steps.detect.outputs.env_folder }}

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -var="image_url=${{ steps.detect.outputs.image_url }}"
        working-directory: ${{ steps.detect.outputs.env_folder }}

      - name: Terraform Apply
        if: github.event_name == 'push' || github.event.inputs.destroy == 'false'
        run: terraform apply -auto-approve -var-file="terraform.tfvars" -var="image_url=${{ steps.detect.outputs.image_url }}"
        working-directory: ${{ steps.detect.outputs.env_folder }}

      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true'
        run: terraform destroy -auto-approve -var-file="terraform.tfvars" -var="image_url=${{ steps.detect.outputs.image_url }}"
        working-directory: ${{ steps.detect.outputs.env_folder }}
