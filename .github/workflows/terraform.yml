name: Terraform Multi-Environment CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "dev-environment/**"
      - "stage-environment/**"
      - "prod-environment/**"
      - "modules/**"
      - ".github/workflows/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Detect Environment
        id: detect
        run: |
          if git diff --name-only HEAD~1 | grep -q "^dev-environment/"; then
            ENV_NAME="dev"
          elif git diff --name-only HEAD~1 | grep -q "^stage-environment/"; then
            ENV_NAME="stage"
          elif git diff --name-only HEAD~1 | grep -q "^prod-environment/"; then
            ENV_NAME="prod"
          else
            echo "No environment changes detected. Exiting."
            exit 0
          fi

          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "env_folder=${ENV_NAME}-environment" >> $GITHUB_OUTPUT
          echo "backend_key=${ENV_NAME}/terraform.tfstate" >> $GITHUB_OUTPUT

          if [[ "$ENV_NAME" == "dev" ]]; then
            echo "bucket=${{ secrets.DEV_TF_STATE_BUCKET }}" >> $GITHUB_OUTPUT
            echo "table=${{ secrets.DEV_TF_LOCK_TABLE }}" >> $GITHUB_OUTPUT
          elif [[ "$ENV_NAME" == "stage" ]]; then
            echo "bucket=${{ secrets.STAGE_TF_STATE_BUCKET }}" >> $GITHUB_OUTPUT
            echo "table=${{ secrets.STAGE_TF_LOCK_TABLE }}" >> $GITHUB_OUTPUT
          elif [[ "$ENV_NAME" == "prod" ]]; then
            echo "bucket=${{ secrets.PROD_TF_STATE_BUCKET }}" >> $GITHUB_OUTPUT
            echo "table=${{ secrets.PROD_TF_LOCK_TABLE }}" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRETE_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform -chdir=${{ steps.detect.outputs.env_folder }} init \
              -backend-config="bucket=${{ steps.detect.outputs.bucket }}" \
              -backend-config="dynamodb_table=${{ steps.detect.outputs.table }}" \
              -backend-config="key=${{ steps.detect.outputs.backend_key }}" \
              -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Plan
        run: terraform -chdir=${{ steps.detect.outputs.env_folder }} plan

      - name: Terraform Apply
        run: terraform -chdir=${{ steps.detect.outputs.env_folder }} apply -auto-approve
